

<!DOCTYPE html>
<html lang="zh-CN" data-default-color-scheme=auto>



<head>
  <meta charset="UTF-8">
  <link rel="apple-touch-icon" sizes="76x76" href="/img/fluid.png">
  <link rel="icon" href="/assets/img/favicon.ico">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, shrink-to-fit=no">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  
  <meta name="theme-color" content="rgb(45,86,141)">
  <meta name="author" content="F Juny">
  <meta name="keywords" content="">
  
    <meta name="description" content="题目库链接：团体程序设计天梯赛-练习集 LAST：PTA天梯练习赛 刷题笔记1；  OP L2-013 红色警报 (25 分) *  思路 代码   L2-014 列车调度 (25 分) *  思路 代码   L2-015 互评成绩 (25 分) *  思路 代码   L2-016 愿天下有情人都是失散多年的兄妹 (25 分) *  思路 代码   L2-017 人以群分 (25 分) *  思路">
<meta property="og:type" content="article">
<meta property="og:title" content="PTA天梯练习赛 刷题笔记2（L2 013-021）">
<meta property="og:url" content="https://tanyuu.github.io/2021.01-06/PTA%E5%A4%A9%E6%A2%AF%E7%BB%83%E4%B9%A0%E8%B5%9B%20%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B02%EF%BC%88L2%20013-021%EF%BC%89">
<meta property="og:site_name" content="Yu_Tang">
<meta property="og:description" content="题目库链接：团体程序设计天梯赛-练习集 LAST：PTA天梯练习赛 刷题笔记1；  OP L2-013 红色警报 (25 分) *  思路 代码   L2-014 列车调度 (25 分) *  思路 代码   L2-015 互评成绩 (25 分) *  思路 代码   L2-016 愿天下有情人都是失散多年的兄妹 (25 分) *  思路 代码   L2-017 人以群分 (25 分) *  思路">
<meta property="og:locale" content="zh_CN">
<meta property="article:published_time" content="2021-04-20T05:49:26.000Z">
<meta property="article:modified_time" content="2022-08-02T02:02:49.137Z">
<meta property="article:author" content="Fu Junyuan">
<meta name="twitter:card" content="summary_large_image">
  
  
  
  <title>PTA天梯练习赛 刷题笔记2（L2 013-021） - Yu_Tang</title>

  <link  rel="stylesheet" href="https://lib.baomitu.com/twitter-bootstrap/4.6.1/css/bootstrap.min.css" />



  <link  rel="stylesheet" href="https://lib.baomitu.com/github-markdown-css/4.0.0/github-markdown.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/hint.css/2.7.0/hint.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/KaTeX/0.15.6/katex.min.css" />



<!-- 主题依赖的图标库，不要自行修改 -->
<!-- Do not modify the link that theme dependent icons -->

<link rel="stylesheet" href="//at.alicdn.com/t/font_1749284_hj8rtnfg7um.css">



<link rel="stylesheet" href="//at.alicdn.com/t/font_1736178_lbnruvf0jn.css">


<link  rel="stylesheet" href="/css/main.css" />


  <link id="highlight-css" rel="stylesheet" href="/css/highlight.css" />
  
    <link id="highlight-css-dark" rel="stylesheet" href="/css/highlight-dark.css" />
  




  <script id="fluid-configs">
    var Fluid = window.Fluid || {};
    Fluid.ctx = Object.assign({}, Fluid.ctx)
    var CONFIG = {"hostname":"tanyuu.github.io","root":"/","version":"1.9.2","typing":{"enable":true,"typeSpeed":70,"cursorChar":"","loop":false,"scope":[]},"anchorjs":{"enable":true,"element":"h1,h2,h3,h4,h5,h6","placement":"left","visible":"hover","icon":""},"progressbar":{"enable":true,"height_px":3,"color":"#29d","options":{"showSpinner":false,"trickleSpeed":100}},"code_language":{"enable":true,"default":"TEXT"},"copy_btn":true,"image_caption":{"enable":true},"image_zoom":{"enable":true,"img_url_replace":["",""]},"toc":{"enable":true,"placement":"right","headingSelector":"h1,h2,h3,h4,h5,h6","collapseDepth":0},"lazyload":{"enable":true,"loading_img":"/img/loading.gif","onlypost":false,"offset_factor":2},"web_analytics":{"enable":false,"follow_dnt":true,"baidu":null,"google":null,"gtag":null,"tencent":{"sid":null,"cid":null},"woyaola":null,"cnzz":null,"leancloud":{"app_id":null,"app_key":null,"server_url":null,"path":"window.location.pathname","ignore_local":false}},"search_path":"/local-search.xml"};

    if (CONFIG.web_analytics.follow_dnt) {
      var dntVal = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;
      Fluid.ctx.dnt = dntVal && (dntVal.startsWith('1') || dntVal.startsWith('yes') || dntVal.startsWith('on'));
    }
  </script>
  <script  src="/js/utils.js" ></script>
  <script  src="/js/color-schema.js" ></script>
  


  
<meta name="generator" content="Hexo 6.2.0"></head>


<body>
  

  <header>
    

<div class="header-inner" style="height: 35vh;">
  <nav id="navbar" class="navbar fixed-top  navbar-expand-lg navbar-dark scrolling-navbar">
  <div class="container">
    <a class="navbar-brand" href="/">
      <strong>煜·塘</strong>
    </a>

    <button id="navbar-toggler-btn" class="navbar-toggler" type="button" data-toggle="collapse"
            data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <div class="animated-icon"><span></span><span></span><span></span></div>
    </button>

    <!-- Collapsible content -->
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav ml-auto text-center">
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/">
                <i class="iconfont icon-home-fill"></i>
                首页
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/archives/">
                <i class="iconfont icon-archive-fill"></i>
                归档
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/categories/">
                <i class="iconfont icon-category-fill"></i>
                分类
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/links/">
                <i class="iconfont icon-link-fill"></i>
                友链
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/about/">
                <i class="iconfont icon-user-fill"></i>
                关于
              </a>
            </li>
          
        
        
          <li class="nav-item" id="search-btn">
            <a class="nav-link" target="_self" href="javascript:;" data-toggle="modal" data-target="#modalSearch" aria-label="Search">
              &nbsp;<i class="iconfont icon-search"></i>&nbsp;
            </a>
          </li>
          
        
        
          <li class="nav-item" id="color-toggle-btn">
            <a class="nav-link" target="_self" href="javascript:;" aria-label="Color Toggle">&nbsp;<i
                class="iconfont icon-dark" id="color-toggle-icon"></i>&nbsp;</a>
          </li>
        
      </ul>
    </div>
  </div>
</nav>

  

<div id="banner" class="banner" parallax=true
     style="background: url('/assets/img/wide_home.jpg') no-repeat center center; background-size: cover;">
  <div class="full-bg-img">
    <div class="mask flex-center" style="background-color: rgba(0, 0, 0, 0.3)">
      <div class="banner-text text-center fade-in-up">
        <div class="h2">
          
            <span id="subtitle" data-typed-text="PTA天梯练习赛 刷题笔记2（L2 013-021）"></span>
          
        </div>

        
          
  <div class="mt-3">
    
    
      <span class="post-meta">
        <i class="iconfont icon-date-fill" aria-hidden="true"></i>
        <time datetime="2021-04-20 13:49" pubdate>
          2021年4月20日 下午
        </time>
      </span>
    
  </div>

  <div class="mt-1">
    
      <span class="post-meta mr-2">
        <i class="iconfont icon-chart"></i>
        
          9.2k 字
        
      </span>
    

    
      <span class="post-meta mr-2">
        <i class="iconfont icon-clock-fill"></i>
        
        
        
          77 分钟
        
      </span>
    

    
    
  </div>


        
      </div>

      
    </div>
  </div>
</div>

</div>

  </header>

  <main>
    
      

<div class="container-fluid nopadding-x">
  <div class="row nomargin-x">
    <div class="side-col d-none d-lg-block col-lg-2">
      

    </div>

    <div class="col-lg-8 nopadding-x-md">
      <div class="container nopadding-x-md" id="board-ctn">
        <div id="board">
          <article class="post-content mx-auto">
            <!-- SEO header -->
            <h1 style="display: none">PTA天梯练习赛 刷题笔记2（L2 013-021）</h1>
            
            
              <div class="markdown-body">
                
                <p>题目库链接：<a target="_blank" rel="noopener" href="https://pintia.cn/problem-sets/994805046380707840/problems/type/7">团体程序设计天梯赛-练习集</a></p>
<p>LAST：<a target="_blank" rel="noopener" href="https://blog.csdn.net/Tan_Yuu/article/details/115793239">PTA天梯练习赛 刷题笔记1</a>；<br />
<ul class="markdownIt-TOC">
<li><a href="#op">OP</a></li>
<li><a href="#l2-013-%E7%BA%A2%E8%89%B2%E8%AD%A6%E6%8A%A5-25-%E5%88%86">L2-013 红色警报 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81">代码</a></li>
</ul>
</li>
<li><a href="#l2-014-%E5%88%97%E8%BD%A6%E8%B0%83%E5%BA%A6-25-%E5%88%86">L2-014 列车调度 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-2">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-2">代码</a></li>
</ul>
</li>
<li><a href="#l2-015-%E4%BA%92%E8%AF%84%E6%88%90%E7%BB%A9-25-%E5%88%86">L2-015 互评成绩 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-3">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-3">代码</a></li>
</ul>
</li>
<li><a href="#l2-016-%E6%84%BF%E5%A4%A9%E4%B8%8B%E6%9C%89%E6%83%85%E4%BA%BA%E9%83%BD%E6%98%AF%E5%A4%B1%E6%95%A3%E5%A4%9A%E5%B9%B4%E7%9A%84%E5%85%84%E5%A6%B9-25-%E5%88%86">L2-016 愿天下有情人都是失散多年的兄妹 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-4">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-4">代码</a></li>
</ul>
</li>
<li><a href="#l2-017-%E4%BA%BA%E4%BB%A5%E7%BE%A4%E5%88%86-25-%E5%88%86">L2-017 人以群分 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-5">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-5">代码</a></li>
</ul>
</li>
<li><a href="#l2-018-%E5%A4%9A%E9%A1%B9%E5%BC%8Fa%E9%99%A4%E4%BB%A5b-25-%E5%88%86">L2-018 多项式A除以B (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-6">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-6">代码</a></li>
</ul>
</li>
<li><a href="#l2-019-%E6%82%84%E6%82%84%E5%85%B3%E6%B3%A8-25-%E5%88%86">L2-019 悄悄关注 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-7">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-7">代码</a></li>
</ul>
</li>
<li><a href="#l2-020-%E5%8A%9F%E5%A4%AB%E4%BC%A0%E4%BA%BA-25-%E5%88%86">L2-020 功夫传人 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-8">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-8">代码</a></li>
</ul>
</li>
<li><a href="#l2-021-%E7%82%B9%E8%B5%9E%E7%8B%82%E9%AD%94-25-%E5%88%86">L2-021 点赞狂魔 (25 分)</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-9">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-9">代码</a></li>
</ul>
</li>
<li><a href="#ed">ED</a></li>
</ul>
</p>
<h2 id="op"><a class="markdownIt-Anchor" href="#op"></a> OP</h2>
<p>\</p>
<h2 id="l2-013-红色警报-25-分"><a class="markdownIt-Anchor" href="#l2-013-红色警报-25-分"></a> L2-013 红色警报 (25 分)</h2>
<p>bfs</p>
<h4 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h4>
<p>这道题主要部分就是bfs计数，检验新集合与旧集合是不是元素数少1，只不过需要注意的细节有些多；</p>
<p>我将每一个连通块内编号最小的城市作为该连通块的代表，在该位上存储该块的元素数；</p>
<p>一个城市沦陷后，判断该城所在的连通块元素数量变化情况；<br />
需要注意的是，如果该城即为该连通块的代表，则需要另外选择一个代表对该连通块进行广搜计数；</p>
<p>如果由于城市沦陷导致一些城市失联，则需要对失联的城市重新bfs；</p>
<h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br>vector&lt;<span class="hljs-type">int</span>&gt;rd[<span class="hljs-number">502</span>];<br><span class="hljs-type">int</span> gt[<span class="hljs-number">502</span>];<span class="hljs-comment">//&gt;=0为所属连通块最小号城市编号，-1为未达，-2为被攻占</span><br><span class="hljs-type">int</span> c[<span class="hljs-number">502</span>];<span class="hljs-comment">//记录以i为代表的连通块的城市数</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    c[x]=<span class="hljs-number">0</span>;<span class="hljs-comment">//刷0</span><br>    queue&lt;<span class="hljs-type">int</span>&gt;que;<br>    <span class="hljs-comment">//if(gt[x]==-1)//防呆设计，无必要</span><br>    &#123;<br>        que.<span class="hljs-built_in">push</span>(x);<br>        gt[x]=x;<br>        c[x]++;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(!que.<span class="hljs-built_in">empty</span>())<br>    &#123;<br>        <span class="hljs-type">int</span> now=que.<span class="hljs-built_in">front</span>();<br>        que.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i:rd[now])<br>            <span class="hljs-keyword">if</span>(gt[i]==<span class="hljs-number">-1</span>)<br>            &#123;<br>                que.<span class="hljs-built_in">push</span>(i);<br>                c[x]++;<br>                gt[i]=x;<br>            &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,m,a,b,part=<span class="hljs-number">0</span>;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-keyword">while</span>(m--)<span class="hljs-comment">//存路</span><br>    &#123;<br>        cin&gt;&gt;a&gt;&gt;b;<br>        rd[a].<span class="hljs-built_in">push_back</span>(b);<br>        rd[b].<span class="hljs-built_in">push_back</span>(a);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)gt[i]=<span class="hljs-number">-1</span>;<span class="hljs-comment">//标记未达</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        <span class="hljs-keyword">if</span>(gt[i]==<span class="hljs-number">-1</span>)<br>        &#123;<br>            <span class="hljs-comment">//printf(&quot;*&quot;);</span><br>            <span class="hljs-built_in">bfs</span>(i);<br>        &#125;<br>    <span class="hljs-comment">//初始化完成</span><br>    cin&gt;&gt;m;<br>    <span class="hljs-type">int</span> co=m;<br>    <span class="hljs-keyword">while</span>(m--)&#123;<br>        cin&gt;&gt;a;<span class="hljs-comment">//a为沦陷城</span><br>        b=n;<span class="hljs-comment">//b为备选代表</span><br>        <span class="hljs-type">int</span> area=gt[a],car=c[area];<span class="hljs-comment">//area为沦陷城所在区域，car为该区域城市数</span><br>        gt[a]=<span class="hljs-number">-2</span>;<span class="hljs-comment">//标记沦陷</span><br>        <span class="hljs-comment">/*if(car==1)//防呆特判，无必要</span><br><span class="hljs-comment">        &#123;</span><br><span class="hljs-comment">            printf(&quot;City %d is lost.\n&quot;,a);</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment">        else*/</span><br>        &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<span class="hljs-comment">//把该区域内其他城市标记未连接</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(gt[i]==area&amp;&amp;i!=a)gt[i]=<span class="hljs-number">-1</span>;<br>            <span class="hljs-keyword">if</span>(gt[i]==<span class="hljs-number">-1</span>&amp;&amp;i!=a)b=<span class="hljs-built_in">min</span>(b,i);<span class="hljs-comment">//更新备选城</span><br>        &#125;<br>        <span class="hljs-keyword">if</span>(a==area)area=b;<span class="hljs-comment">//如有必要，更改代表</span><br>        c[area]=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span>(area&gt;=<span class="hljs-number">0</span>)<span class="hljs-built_in">bfs</span>(area);<span class="hljs-comment">//如果合法，bfs</span><br>        <span class="hljs-comment">//printf(&quot;%d %d %d &quot;,area,c[area],car);</span><br>        <span class="hljs-keyword">if</span>(c[area]&lt;car<span class="hljs-number">-1</span>)<span class="hljs-comment">//如果有其余城市失联</span><br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Red Alert: City %d is lost!\n&quot;</span>,a);<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>                <span class="hljs-keyword">if</span>(gt[i]==<span class="hljs-number">-1</span>)<br>                &#123;<br>                    <span class="hljs-built_in">bfs</span>(i);<span class="hljs-comment">//重新bfs</span><br>                &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;City %d is lost.\n&quot;</span>,a);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(co&gt;=n)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Game Over.&quot;</span>);<span class="hljs-comment">//全部沦陷判定</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="l2-014-列车调度-25-分"><a class="markdownIt-Anchor" href="#l2-014-列车调度-25-分"></a> L2-014 列车调度 (25 分)</h2>
<p>贪心</p>
<h4 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h4>
<p>这个题我常做常忘，这次最后还是参考了<a target="_blank" rel="noopener" href="https://blog.csdn.net/shiliang97/article/details/98481886">这位大佬的题解</a>;</p>
<p>本质是求给定序列最少有多少个递增序列（可不连续）；</p>
<p>首先想到的是创建足够多个栈，对于每一个元素，将其压入栈顶元素大于该元素并且栈顶元素最小的栈，如果不存在满足条件的栈，则将其压入新栈；<br />
如此，时间复杂度则到了O(n<sup>2</sup>)，不现实；</p>
<p>在上面的过程中，我们可以发现，对于每个栈，只有栈顶元素是会被用到的，我们便可以只存储栈顶元素；</p>
<p>如果将栈顶元素放入一个set，便可以使用upper_bound十分快速地找到满足条件的set元素（所代表的栈）并将该元素替换为新值；<br />
同理，如果不存在满足条件的set元素，将新值加入set即可；<br />
时间复杂度便被降到了O(nlogn)；</p>
<p>因为每个车厢的编号是无重复的，所以不需要考虑误去重的问题；</p>
<h4 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br>set&lt;<span class="hljs-type">int</span>&gt;st;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,i,g;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        cin&gt;&gt;g;<br>        <span class="hljs-keyword">auto</span> po=st.<span class="hljs-built_in">upper_bound</span>(g);<br>        <span class="hljs-keyword">if</span>(po!=st.<span class="hljs-built_in">end</span>())<span class="hljs-comment">//有满足条件的元素</span><br>        &#123;<br>            st.<span class="hljs-built_in">erase</span>(po);<span class="hljs-comment">//清除该元素</span><br>        &#125;<br>        st.<span class="hljs-built_in">insert</span>(g);<br>    &#125;<br>    cout&lt;&lt;st.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="l2-015-互评成绩-25-分"><a class="markdownIt-Anchor" href="#l2-015-互评成绩-25-分"></a> L2-015 互评成绩 (25 分)</h2>
<p>排序？</p>
<h4 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h4>
<p>按要求算出每个同学成绩后排序，按要求输出即可；</p>
<p><strong>注意：题目中要求的“非降序”，不是按输入顺序，而是按升序</strong><br />
所以代码中的pair数组用double数组即可</p>
<h4 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,k,m;<br>    cin&gt;&gt;n&gt;&gt;k&gt;&gt;m;<br>    pair&lt;<span class="hljs-type">double</span>,<span class="hljs-type">int</span>&gt; sc[<span class="hljs-number">10004</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        <span class="hljs-type">int</span> g[<span class="hljs-number">20</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=k;j++)<br>        &#123;<br>            cin&gt;&gt;g[j];<br>        &#125;<br>        <span class="hljs-built_in">sort</span>(g+<span class="hljs-number">1</span>,g+k+<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">2</span>;j&lt;=k<span class="hljs-number">-1</span>;j++)<br>        &#123;<br>            sc[i].first+=g[j];<br>        &#125;<br>        sc[i].first/=k<span class="hljs-number">-2</span>;<br>        sc[i].second=i;<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(sc+<span class="hljs-number">1</span>,sc+n+<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3lf%s&quot;</span>,sc[n-i].first,i?<span class="hljs-string">&quot; &quot;</span>:<span class="hljs-string">&quot;\0&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="l2-016-愿天下有情人都是失散多年的兄妹-25-分"><a class="markdownIt-Anchor" href="#l2-016-愿天下有情人都是失散多年的兄妹-25-分"></a> L2-016 愿天下有情人都是失散多年的兄妹 (25 分)</h2>
<p>dfs</p>
<h4 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h4>
<p>遇到这个题首先想到的是并查集，但是每人有父亲与母亲两个上级节点，同时又没有保证只有一个下级节点，所以并查集会非常麻烦；</p>
<p>于是这道题就可以用定深的dfs来解决了；</p>
<p>对第一个人dfs时，将其范围内所有亲友用map标记，对第二个人dfs时，检查范围内有无亲友被标记即可；</p>
<p>这道题的数据非常狠，包括但不限于询问某人的父母与其他同辈是否可婚；<br />
4号测试组的数据怀疑有一些问题，具体描述如下：<br />
默认性别为0时，38行可被注释掉，但是34行不可以，大致想了一下，没想到可能造成这种情况的测试组，也有可能是我想得不够全面，欢迎讨论；</p>
<h4 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-keyword">struct</span> <br>&#123;<br>    <span class="hljs-type">int</span> s;<br>    <span class="hljs-type">int</span> f[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">int</span> fok;<br>&#125;p[<span class="hljs-number">100005</span>];<br>map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;mp;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> o)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> f=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(mp[x])&#123;f=<span class="hljs-number">0</span>;&#125;<br>    <span class="hljs-keyword">if</span>(o)mp[x]++;<br>    <span class="hljs-keyword">if</span>(n&lt;=<span class="hljs-number">4</span>&amp;&amp;p[x].fok)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">1</span>;i++)<br>            <span class="hljs-keyword">if</span>(p[x].f[i]!=<span class="hljs-number">-1</span>)f*=<span class="hljs-built_in">dfs</span>(p[x].f[i],n+<span class="hljs-number">1</span>,o);<br>    &#125;<br>    <span class="hljs-keyword">return</span> f;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,a,b,g;<br>    <span class="hljs-type">char</span> c;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">while</span>(n--)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %c&quot;</span>,&amp;g,&amp;c);<br>        <span class="hljs-keyword">if</span>(c==<span class="hljs-string">&#x27;M&#x27;</span>)p[g].s=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> p[g].s=<span class="hljs-number">0</span>;<br>        p[g].fok=<span class="hljs-number">1</span>;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;p[g].f[<span class="hljs-number">0</span>],&amp;p[g].f[<span class="hljs-number">1</span>]);<br>        <span class="hljs-keyword">if</span>(p[g].f[<span class="hljs-number">0</span>]!=<span class="hljs-number">-1</span>)p[p[g].f[<span class="hljs-number">0</span>]].s=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(p[g].f[<span class="hljs-number">1</span>]!=<span class="hljs-number">-1</span>)p[p[g].f[<span class="hljs-number">1</span>]].s=<span class="hljs-number">0</span>;<br>    &#125;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">while</span>(n--)<br>    &#123;<br>        cin&gt;&gt;a&gt;&gt;b;<br>        <span class="hljs-keyword">if</span>(p[a].s==p[b].s)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Never Mind\n&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            mp.<span class="hljs-built_in">clear</span>();<br>            <span class="hljs-built_in">dfs</span>(a,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">dfs</span>(b,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>))<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Yes\n&quot;</span>);<br>            <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;No\n&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="l2-017-人以群分-25-分"><a class="markdownIt-Anchor" href="#l2-017-人以群分-25-分"></a> L2-017 人以群分 (25 分)</h2>
<p>贪心？</p>
<h4 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h4>
<p>首要目的是使两群人人数差尽量小，如果总人数为偶数，则对半分，若总人数为奇数，则两边人数差一；</p>
<p>其次是是两侧分数之和的差尽量大，则按分数排序，一侧取较大的一段，另一侧取较小端即可；<br />
对于总人数为奇数的情况，显然，将中位数分至较大端能使两端分数差更大；</p>
<h4 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,a=<span class="hljs-number">0</span>,b=<span class="hljs-number">0</span>,g[<span class="hljs-number">100005</span>],i;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;g[i]);<br>    <span class="hljs-built_in">sort</span>(g+<span class="hljs-number">1</span>,g+<span class="hljs-number">1</span>+n);<br>    <span class="hljs-keyword">if</span>(n&amp;<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n/<span class="hljs-number">2</span>;i++)<br>        a+=g[i],b+=g[n+<span class="hljs-number">1</span>-i];<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Outgoing #: %d\nIntroverted #: %d\nDiff = %d&quot;</span>,n/<span class="hljs-number">2</span>+<span class="hljs-number">1</span>,n/<span class="hljs-number">2</span>,b-a+g[n/<span class="hljs-number">2</span>+<span class="hljs-number">1</span>]);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n/<span class="hljs-number">2</span>;i++)<br>        a+=g[i],b+=g[n+<span class="hljs-number">1</span>-i];<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Outgoing #: %d\nIntroverted #: %d\nDiff = %d&quot;</span>,n/<span class="hljs-number">2</span>,n/<span class="hljs-number">2</span>,b-a);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="l2-018-多项式a除以b-25-分"><a class="markdownIt-Anchor" href="#l2-018-多项式a除以b-25-分"></a> L2-018 多项式A除以B (25 分)</h2>
<p>大除法<br />
有一些大佬的做法还是不太清楚，mark一下，以后看<a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_45697774/article/details/112130004">here</a>&amp;<a target="_blank" rel="noopener" href="https://blog.csdn.net/alpha202/article/details/90737626">here</a></p>
<h4 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h4>
<p>用数组模拟初中数学的大乘法即可；</p>
<p><a target="_blank" rel="noopener" href="https://baike.baidu.com/item/%E5%A4%A7%E9%99%A4%E6%B3%95/7844493?fr=aladdin">百度百科_大除法</a></p>
<p>补充一点数据范围：<br />
设最高幂次P；<br />
五个样例中，有三个样例满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>&lt;</mo><mo>=</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">P&lt;=100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span>；<br />
有四个样例满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>&lt;</mo><mo>=</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">P&lt;=1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>；<br />
所有样例满足  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>&lt;</mo><mo>=</mo><mn>10000</mn></mrow><annotation encoding="application/x-tex">P&lt;=10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>；</p>
<h4 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">double</span> a[<span class="hljs-number">10004</span>],b[<span class="hljs-number">10004</span>];<br>    <span class="hljs-type">double</span> c[<span class="hljs-number">10004</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> n,g1,m,i,l,ma=<span class="hljs-number">-1</span>,mb=<span class="hljs-number">-1</span>;<br>    <span class="hljs-type">double</span> g2;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">while</span>(n--)cin&gt;&gt;g1&gt;&gt;g2,a[g1]=g2,ma=<span class="hljs-built_in">max</span>(ma,g1);<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">while</span>(n--)cin&gt;&gt;g1&gt;&gt;g2,b[g1]=g2,mb=<span class="hljs-built_in">max</span>(mb,g1);<br>    <span class="hljs-comment">/*for(i=0;i&lt;=ma;i++)printf(&quot;%.1lf &quot;,a[i]);</span><br><span class="hljs-comment">    printf(&quot;\n&quot;);</span><br><span class="hljs-comment">    for(i=0;i&lt;=mb;i++)printf(&quot;%.1lf &quot;,b[i]);*/</span><br>    <span class="hljs-type">int</span> top=ma;<br>    <span class="hljs-keyword">while</span>(top&gt;=mb)<br>    &#123;<br>        c[top-mb]=a[top]/b[mb];<br>        <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;=top;i++)<br>        &#123;<br>            a[top-i]-=b[mb-i]*c[top-mb];<br>            <span class="hljs-keyword">if</span>(i==mb)<span class="hljs-keyword">break</span>;<br>        &#125;<br>        top--;<br>    &#125;<br>    <span class="hljs-type">int</span> cc=<span class="hljs-number">0</span>,ca=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;=ma-mb;i++)<span class="hljs-keyword">if</span>(<span class="hljs-built_in">fabs</span>(c[i])&gt;=<span class="hljs-number">0.1</span>)cc++;<span class="hljs-keyword">else</span> c[i]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;mb;i++)<span class="hljs-keyword">if</span>(<span class="hljs-built_in">fabs</span>(a[i])&gt;=<span class="hljs-number">0.1</span>)ca++;<span class="hljs-keyword">else</span> a[i]=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,cc);<br>    <span class="hljs-keyword">if</span>(cc)&#123;<span class="hljs-keyword">for</span>(i=ma-mb;i&gt;=<span class="hljs-number">0</span>;i--)<span class="hljs-keyword">if</span>(<span class="hljs-built_in">fabs</span>(c[i])&gt;=<span class="hljs-number">0.1</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; %d %.1lf&quot;</span>,i,c[i]);&#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 0 0.0&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n%d&quot;</span>,ca);<br>    <span class="hljs-keyword">if</span>(ca)&#123;<span class="hljs-keyword">for</span>(i=mb;i&gt;=<span class="hljs-number">0</span>;i--)<span class="hljs-keyword">if</span>(<span class="hljs-built_in">fabs</span>(a[i])&gt;=<span class="hljs-number">0.1</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; %d %.1lf&quot;</span>,i,a[i]);&#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 0 0.0&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="l2-019-悄悄关注-25-分"><a class="markdownIt-Anchor" href="#l2-019-悄悄关注-25-分"></a> L2-019 悄悄关注 (25 分)</h2>
<p>ZZU视频刷完啦~</p>
<h4 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h4>
<p>分别存下关注列表中的每个人和点赞数，为关注列表中的每个人分配哈希值（并无必要，标记即可），遍历点赞的人，筛选满足条件的输出即可；</p>
<h4 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> double long double</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">2e5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> M = <span class="hljs-number">20</span>;<br><br>map&lt;string,<span class="hljs-type">int</span>&gt;hh,ct;<br>map&lt;string,<span class="hljs-type">int</span>&gt;::iterator it;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,chh=<span class="hljs-number">1</span>,intg;<br>    string g;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">while</span>(n--)<br>    &#123;<br>        cin&gt;&gt;g;<br>        hh[g]=chh++;<br>    &#125;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">double</span> cal=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        cin&gt;&gt;g&gt;&gt;intg;<br>        ct[g]=intg;<br>        cal+=intg;<br>    &#125;<br>    cal/=n;<br>    <span class="hljs-type">int</span> f=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(it=ct.<span class="hljs-built_in">begin</span>();it!=ct.<span class="hljs-built_in">end</span>();it++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(it-&gt;second&gt;=cal&amp;&amp;!hh[it-&gt;first])<br>        &#123;<br>            cout&lt;&lt;it-&gt;first;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>            f++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!f)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Bing Mei You&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<h2 id="l2-020-功夫传人-25-分"><a class="markdownIt-Anchor" href="#l2-020-功夫传人-25-分"></a> L2-020 功夫传人 (25 分)</h2>
<h4 id="思路-8"><a class="markdownIt-Anchor" href="#思路-8"></a> 思路</h4>
<p>记录树状关系，进行dfs，统计得道者的武力值即可；</p>
<h4 id="代码-8"><a class="markdownIt-Anchor" href="#代码-8"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> M = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">double</span> k[N + <span class="hljs-number">5</span>];<br><span class="hljs-type">double</span> val[N + <span class="hljs-number">5</span>];<br><span class="hljs-type">double</span> dk;<br>vector&lt;<span class="hljs-type">int</span>&gt; rod[N + <span class="hljs-number">5</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    val[x] *= k[x];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; rod[x].<span class="hljs-built_in">size</span>(); i++)<br>    &#123;<br>        val[rod[x][i]] = val[x] * dk;<br>        <span class="hljs-built_in">dfs</span>(rod[x][i]);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n, m, g;<br>    <span class="hljs-type">double</span> gd;<br>    cin &gt;&gt; n &gt;&gt; val[<span class="hljs-number">0</span>] &gt;&gt; dk;<br>    dk /= <span class="hljs-number">100.0</span>;<br>    dk = <span class="hljs-number">1</span> - dk;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;m);<br>        <span class="hljs-keyword">if</span> (m)<br>        &#123;<br>            k[i] = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span> (m--)<br>            &#123;<br>                <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;g);<br>                rod[i].<span class="hljs-built_in">push_back</span>(g);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            cin &gt;&gt; k[i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">dfs</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">double</span> ans = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        <span class="hljs-comment">// printf(&quot;%.2lf\n&quot;,val[i]);</span><br>        <span class="hljs-keyword">if</span> (k[i] != <span class="hljs-number">1</span>)<br>            ans += val[i];<br>    &#125;<br>    ans = <span class="hljs-built_in">floor</span>(ans);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.0lf&quot;</span>, ans);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<h2 id="l2-021-点赞狂魔-25-分"><a class="markdownIt-Anchor" href="#l2-021-点赞狂魔-25-分"></a> L2-021 点赞狂魔 (25 分)</h2>
<h4 id="思路-9"><a class="markdownIt-Anchor" href="#思路-9"></a> 思路</h4>
<p>对每个人的点赞标签去重（set / map / 排序去重）后，记录并排序；</p>
<p>按要求输出即可；</p>
<h4 id="代码-9"><a class="markdownIt-Anchor" href="#代码-9"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e3</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> M = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br>map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; gt;<br>string g[<span class="hljs-number">102</span>];<br>pair&lt;pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">double</span>&gt;, <span class="hljs-type">int</span>&gt; pr[<span class="hljs-number">102</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n, gint, m, chh = <span class="hljs-number">0</span>;<br>    cin &gt;&gt; n;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>    &#123;<br>        cin &gt;&gt; g[i];<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;m);<br>        gt.<span class="hljs-built_in">clear</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++)<br>        &#123;<br>            cin &gt;&gt; gint;<br>            gt[gint]++;<br>        &#125;<br>        pr[i] = &#123;&#123;gt.<span class="hljs-built_in">size</span>(), m * <span class="hljs-number">1.0</span> / gt.<span class="hljs-built_in">size</span>()&#125;, i&#125;;<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(pr + <span class="hljs-number">1</span>, pr + <span class="hljs-number">1</span> + n,<br>         [&amp;](pair&lt;pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">double</span>&gt;, <span class="hljs-type">int</span>&gt; &amp;a, pair&lt;pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">double</span>&gt;, <span class="hljs-type">int</span>&gt; &amp;b)<br>         &#123;<br>             <span class="hljs-keyword">if</span> (a.first.first == b.first.first)<br>                 <span class="hljs-keyword">return</span> a.first.second &lt; b.first.second;<br>             <span class="hljs-keyword">else</span><br>                 <span class="hljs-keyword">return</span> a.first.first &gt; b.first.first;<br>         &#125;);<br>    <span class="hljs-type">int</span> f = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n &amp;&amp; i &lt;= <span class="hljs-number">3</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (f)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>        cout &lt;&lt; g[pr[i].second];<br>        f++;<br>    &#125;<br>    <span class="hljs-keyword">while</span> (f &lt; <span class="hljs-number">3</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; -&quot;</span>);<br>        f++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>
<h2 id="ed"><a class="markdownIt-Anchor" href="#ed"></a> ED</h2>
<p>\</p>

                
              </div>
            
            <hr/>
            <div>
              <div class="post-metas my-3">
  
    <div class="post-meta mr-3 d-flex align-items-center">
      <i class="iconfont icon-category"></i>
      

<span class="category-chains">
  
  
    
      <span class="category-chain">
        
  <a href="/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/" class="category-chain-item">算法竞赛</a>
  
  
    <span>></span>
    
  <a href="/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%AF%94%E8%B5%9B%E4%B8%8E%E9%A2%98%E9%9B%86/" class="category-chain-item">比赛与题集</a>
  
  

  

      </span>
    
  
</span>

    </div>
  
  
</div>


              
  

  <div class="license-box my-3">
    <div class="license-title">
      <div>PTA天梯练习赛 刷题笔记2（L2 013-021）</div>
      <div>https://tanyuu.github.io/2021.01-06/PTA天梯练习赛 刷题笔记2（L2 013-021）</div>
    </div>
    <div class="license-meta">
      
        <div class="license-meta-item">
          <div>作者</div>
          <div>F Juny</div>
        </div>
      
      
        <div class="license-meta-item license-meta-date">
          <div>发布于</div>
          <div>2021年4月20日</div>
        </div>
      
      
      <div class="license-meta-item">
        <div>许可协议</div>
        <div>
          
            
            
              <a target="_blank" href="https://creativecommons.org/licenses/by/4.0/">
              <span class="hint--top hint--rounded" aria-label="BY - 署名">
                <i class="iconfont icon-by"></i>
              </span>
              </a>
            
          
        </div>
      </div>
    </div>
    <div class="license-icon iconfont"></div>
  </div>



              
                <div class="post-prevnext my-3">
                  <article class="post-prev col-6">
                    
                    
                      <a href="/2021.01-06/NEFU%E5%A4%A7%E4%B8%80%E7%9C%81%E8%B5%9B%E8%AE%AD%E7%BB%831%EF%BC%88%E5%85%A8%E9%A2%98%E8%A7%A3%EF%BC%89" title="NEFU大一省赛训练1（全题解）">
                        <i class="iconfont icon-arrowleft"></i>
                        <span class="hidden-mobile">NEFU大一省赛训练1（全题解）</span>
                        <span class="visible-mobile">上一篇</span>
                      </a>
                    
                  </article>
                  <article class="post-next col-6">
                    
                    
                      <a href="/2021.01-06/PTA%E5%A4%A9%E6%A2%AF%E7%BB%83%E4%B9%A0%E8%B5%9B%20%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B01%EF%BC%88L2%20001-012%EF%BC%89" title="PTA天梯练习赛 刷题笔记1（L2 001-012）">
                        <span class="hidden-mobile">PTA天梯练习赛 刷题笔记1（L2 001-012）</span>
                        <span class="visible-mobile">下一篇</span>
                        <i class="iconfont icon-arrowright"></i>
                      </a>
                    
                  </article>
                </div>
              
            </div>

            
          </article>
        </div>
      </div>
    </div>

    <div class="side-col d-none d-lg-block col-lg-2">
      
  <aside class="sidebar" style="margin-left: -1rem">
    <div id="toc">
  <p class="toc-header"><i class="iconfont icon-list"></i>&nbsp;目录</p>
  <div class="toc-body" id="toc-body"></div>
</div>



  </aside>


    </div>
  </div>
</div>





  



  



  



  



  


  
  








    

    
      <a id="scroll-top-button" aria-label="TOP" href="#" role="button">
        <i class="iconfont icon-arrowup" aria-hidden="true"></i>
      </a>
    

    
      <div class="modal fade" id="modalSearch" tabindex="-1" role="dialog" aria-labelledby="ModalLabel"
     aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">搜索</h4>
        <button type="button" id="local-search-close" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body mx-3">
        <div class="md-form mb-5">
          <input type="text" id="local-search-input" class="form-control validate">
          <label data-error="x" data-success="v" for="local-search-input">关键词</label>
        </div>
        <div class="list-group" id="local-search-result"></div>
      </div>
    </div>
  </div>
</div>

    

    
  </main>

  <footer>
    <div class="footer-inner">
  
    <div class="footer-content">
       <a href="https://hexo.io" target="_blank" rel="nofollow noopener"><span>Hexo</span></a> <i class="iconfont icon-love"></i> <a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="nofollow noopener"><span>Fluid</span></a> 
    </div>
  
  
  
  
</div>

  </footer>

  <!-- Scripts -->
  
  <script  src="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.js" ></script>
  <link  rel="stylesheet" href="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.css" />

  <script>
    NProgress.configure({"showSpinner":false,"trickleSpeed":100})
    NProgress.start()
    window.addEventListener('load', function() {
      NProgress.done();
    })
  </script>


<script  src="https://lib.baomitu.com/jquery/3.6.0/jquery.min.js" ></script>
<script  src="https://lib.baomitu.com/twitter-bootstrap/4.6.1/js/bootstrap.min.js" ></script>
<script  src="/js/events.js" ></script>
<script  src="/js/plugins.js" ></script>


  <script  src="https://lib.baomitu.com/typed.js/2.0.12/typed.min.js" ></script>
  <script>
    (function (window, document) {
      var typing = Fluid.plugins.typing;
      var subtitle = document.getElementById('subtitle');
      if (!subtitle || !typing) {
        return;
      }
      var text = subtitle.getAttribute('data-typed-text');
      
        typing(text);
      
    })(window, document);
  </script>




  
    <script  src="/js/img-lazyload.js" ></script>
  




  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/tocbot/4.18.2/tocbot.min.js', function() {
    var toc = jQuery('#toc');
    if (toc.length === 0 || !window.tocbot) { return; }
    var boardCtn = jQuery('#board-ctn');
    var boardTop = boardCtn.offset().top;

    window.tocbot.init({
      tocSelector     : '#toc-body',
      contentSelector : '.markdown-body',
      headingSelector : CONFIG.toc.headingSelector || 'h1,h2,h3,h4,h5,h6',
      linkClass       : 'tocbot-link',
      activeLinkClass : 'tocbot-active-link',
      listClass       : 'tocbot-list',
      isCollapsedClass: 'tocbot-is-collapsed',
      collapsibleClass: 'tocbot-is-collapsible',
      collapseDepth   : CONFIG.toc.collapseDepth || 0,
      scrollSmooth    : true,
      headingsOffset  : -boardTop
    });
    if (toc.find('.toc-list-item').length > 0) {
      toc.css('visibility', 'visible');
    }
  });
</script>


  <script src=https://lib.baomitu.com/clipboard.js/2.0.10/clipboard.min.js></script>

  <script>Fluid.plugins.codeWidget();</script>


  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/anchor-js/4.3.1/anchor.min.js', function() {
    window.anchors.options = {
      placement: CONFIG.anchorjs.placement,
      visible  : CONFIG.anchorjs.visible
    };
    if (CONFIG.anchorjs.icon) {
      window.anchors.options.icon = CONFIG.anchorjs.icon;
    }
    var el = (CONFIG.anchorjs.element || 'h1,h2,h3,h4,h5,h6').split(',');
    var res = [];
    for (var item of el) {
      res.push('.markdown-body > ' + item.trim());
    }
    if (CONFIG.anchorjs.placement === 'left') {
      window.anchors.options.class = 'anchorjs-link-left';
    }
    window.anchors.add(res.join(', '));
  });
</script>


  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.js', function() {
    Fluid.plugins.fancyBox();
  });
</script>


  <script>Fluid.plugins.imageCaption();</script>

  <script  src="/js/local-search.js" ></script>





<!-- 主题的启动项，将它保持在最底部 -->
<!-- the boot of the theme, keep it at the bottom -->
<script  src="/js/boot.js" ></script>


  

  <noscript>
    <div class="noscript-warning">博客在允许 JavaScript 运行的环境下浏览效果更佳</div>
  </noscript>
</body>
</html>
