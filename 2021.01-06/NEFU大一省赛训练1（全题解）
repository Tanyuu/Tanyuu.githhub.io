

<!DOCTYPE html>
<html lang="zh-CN" data-default-color-scheme=auto>



<head>
  <meta charset="UTF-8">
  <link rel="apple-touch-icon" sizes="76x76" href="/img/fluid.png">
  <link rel="icon" href="/assets/img/favicon.ico">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, shrink-to-fit=no">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  
  <meta name="theme-color" content="rgb(45,86,141)">
  <meta name="author" content="F Juny">
  <meta name="keywords" content="">
  
    <meta name="description" content="OP A 哪些数不在 *  思路 代码   B 闹钟 *  思路 代码   C 减法 *  思路 代码   D 隧道 *  思路 代码   E 尖括号 *  思路 代码   F 恐龙的故事 *  思路 代码   G 序列和 *  思路 代码   H 巧克力 *  思路 代码   ED    OP 一个半小时七道题，两个小时一道题555； G题鲨我；  A 哪些数不在 差分  思路 即在区间左端点">
<meta property="og:type" content="article">
<meta property="og:title" content="NEFU大一省赛训练1（全题解）">
<meta property="og:url" content="https://tanyuu.github.io/2021.01-06/NEFU%E5%A4%A7%E4%B8%80%E7%9C%81%E8%B5%9B%E8%AE%AD%E7%BB%831%EF%BC%88%E5%85%A8%E9%A2%98%E8%A7%A3%EF%BC%89">
<meta property="og:site_name" content="Yu_Tang">
<meta property="og:description" content="OP A 哪些数不在 *  思路 代码   B 闹钟 *  思路 代码   C 减法 *  思路 代码   D 隧道 *  思路 代码   E 尖括号 *  思路 代码   F 恐龙的故事 *  思路 代码   G 序列和 *  思路 代码   H 巧克力 *  思路 代码   ED    OP 一个半小时七道题，两个小时一道题555； G题鲨我；  A 哪些数不在 差分  思路 即在区间左端点">
<meta property="og:locale" content="zh_CN">
<meta property="article:published_time" content="2021-05-03T10:18:27.000Z">
<meta property="article:modified_time" content="2022-08-02T02:03:41.545Z">
<meta property="article:author" content="Fu Junyuan">
<meta name="twitter:card" content="summary_large_image">
  
  
  
  <title>NEFU大一省赛训练1（全题解） - Yu_Tang</title>

  <link  rel="stylesheet" href="https://lib.baomitu.com/twitter-bootstrap/4.6.1/css/bootstrap.min.css" />



  <link  rel="stylesheet" href="https://lib.baomitu.com/github-markdown-css/4.0.0/github-markdown.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/hint.css/2.7.0/hint.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.css" />

  <link  rel="stylesheet" href="https://lib.baomitu.com/KaTeX/0.15.6/katex.min.css" />



<!-- 主题依赖的图标库，不要自行修改 -->
<!-- Do not modify the link that theme dependent icons -->

<link rel="stylesheet" href="//at.alicdn.com/t/font_1749284_hj8rtnfg7um.css">



<link rel="stylesheet" href="//at.alicdn.com/t/font_1736178_lbnruvf0jn.css">


<link  rel="stylesheet" href="/css/main.css" />


  <link id="highlight-css" rel="stylesheet" href="/css/highlight.css" />
  
    <link id="highlight-css-dark" rel="stylesheet" href="/css/highlight-dark.css" />
  




  <script id="fluid-configs">
    var Fluid = window.Fluid || {};
    Fluid.ctx = Object.assign({}, Fluid.ctx)
    var CONFIG = {"hostname":"tanyuu.github.io","root":"/","version":"1.9.2","typing":{"enable":true,"typeSpeed":70,"cursorChar":"","loop":false,"scope":[]},"anchorjs":{"enable":true,"element":"h1,h2,h3,h4,h5,h6","placement":"left","visible":"hover","icon":""},"progressbar":{"enable":true,"height_px":3,"color":"#29d","options":{"showSpinner":false,"trickleSpeed":100}},"code_language":{"enable":true,"default":"TEXT"},"copy_btn":true,"image_caption":{"enable":true},"image_zoom":{"enable":true,"img_url_replace":["",""]},"toc":{"enable":true,"placement":"right","headingSelector":"h1,h2,h3,h4,h5,h6","collapseDepth":0},"lazyload":{"enable":true,"loading_img":"/img/loading.gif","onlypost":false,"offset_factor":2},"web_analytics":{"enable":false,"follow_dnt":true,"baidu":null,"google":null,"gtag":null,"tencent":{"sid":null,"cid":null},"woyaola":null,"cnzz":null,"leancloud":{"app_id":null,"app_key":null,"server_url":null,"path":"window.location.pathname","ignore_local":false}},"search_path":"/local-search.xml"};

    if (CONFIG.web_analytics.follow_dnt) {
      var dntVal = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;
      Fluid.ctx.dnt = dntVal && (dntVal.startsWith('1') || dntVal.startsWith('yes') || dntVal.startsWith('on'));
    }
  </script>
  <script  src="/js/utils.js" ></script>
  <script  src="/js/color-schema.js" ></script>
  


  
<meta name="generator" content="Hexo 6.2.0"></head>


<body>
  

  <header>
    

<div class="header-inner" style="height: 35vh;">
  <nav id="navbar" class="navbar fixed-top  navbar-expand-lg navbar-dark scrolling-navbar">
  <div class="container">
    <a class="navbar-brand" href="/">
      <strong>煜·塘</strong>
    </a>

    <button id="navbar-toggler-btn" class="navbar-toggler" type="button" data-toggle="collapse"
            data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <div class="animated-icon"><span></span><span></span><span></span></div>
    </button>

    <!-- Collapsible content -->
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav ml-auto text-center">
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/">
                <i class="iconfont icon-home-fill"></i>
                首页
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/archives/">
                <i class="iconfont icon-archive-fill"></i>
                归档
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/categories/">
                <i class="iconfont icon-category-fill"></i>
                分类
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/links/">
                <i class="iconfont icon-link-fill"></i>
                友链
              </a>
            </li>
          
        
          
          
          
          
            <li class="nav-item">
              <a class="nav-link" href="/about/">
                <i class="iconfont icon-user-fill"></i>
                关于
              </a>
            </li>
          
        
        
          <li class="nav-item" id="search-btn">
            <a class="nav-link" target="_self" href="javascript:;" data-toggle="modal" data-target="#modalSearch" aria-label="Search">
              &nbsp;<i class="iconfont icon-search"></i>&nbsp;
            </a>
          </li>
          
        
        
          <li class="nav-item" id="color-toggle-btn">
            <a class="nav-link" target="_self" href="javascript:;" aria-label="Color Toggle">&nbsp;<i
                class="iconfont icon-dark" id="color-toggle-icon"></i>&nbsp;</a>
          </li>
        
      </ul>
    </div>
  </div>
</nav>

  

<div id="banner" class="banner" parallax=true
     style="background: url('/assets/img/wide_home.jpg') no-repeat center center; background-size: cover;">
  <div class="full-bg-img">
    <div class="mask flex-center" style="background-color: rgba(0, 0, 0, 0.3)">
      <div class="banner-text text-center fade-in-up">
        <div class="h2">
          
            <span id="subtitle" data-typed-text="NEFU大一省赛训练1（全题解）"></span>
          
        </div>

        
          
  <div class="mt-3">
    
    
      <span class="post-meta">
        <i class="iconfont icon-date-fill" aria-hidden="true"></i>
        <time datetime="2021-05-03 18:18" pubdate>
          2021年5月3日 晚上
        </time>
      </span>
    
  </div>

  <div class="mt-1">
    
      <span class="post-meta mr-2">
        <i class="iconfont icon-chart"></i>
        
          7.3k 字
        
      </span>
    

    
      <span class="post-meta mr-2">
        <i class="iconfont icon-clock-fill"></i>
        
        
        
          61 分钟
        
      </span>
    

    
    
  </div>


        
      </div>

      
    </div>
  </div>
</div>

</div>

  </header>

  <main>
    
      

<div class="container-fluid nopadding-x">
  <div class="row nomargin-x">
    <div class="side-col d-none d-lg-block col-lg-2">
      

    </div>

    <div class="col-lg-8 nopadding-x-md">
      <div class="container nopadding-x-md" id="board-ctn">
        <div id="board">
          <article class="post-content mx-auto">
            <!-- SEO header -->
            <h1 style="display: none">NEFU大一省赛训练1（全题解）</h1>
            
            
              <div class="markdown-body">
                
                <p><ul class="markdownIt-TOC">
<li><a href="#op">OP</a></li>
<li><a href="#a-%E5%93%AA%E4%BA%9B%E6%95%B0%E4%B8%8D%E5%9C%A8">A 哪些数不在</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81">代码</a></li>
</ul>
</li>
<li><a href="#b-%E9%97%B9%E9%92%9F">B 闹钟</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-2">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-2">代码</a></li>
</ul>
</li>
<li><a href="#c-%E5%87%8F%E6%B3%95">C 减法</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-3">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-3">代码</a></li>
</ul>
</li>
<li><a href="#d-%E9%9A%A7%E9%81%93">D 隧道</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-4">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-4">代码</a></li>
</ul>
</li>
<li><a href="#e-%E5%B0%96%E6%8B%AC%E5%8F%B7">E 尖括号</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-5">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-5">代码</a></li>
</ul>
</li>
<li><a href="#f-%E6%81%90%E9%BE%99%E7%9A%84%E6%95%85%E4%BA%8B">F 恐龙的故事</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-6">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-6">代码</a></li>
</ul>
</li>
<li><a href="#g-%E5%BA%8F%E5%88%97%E5%92%8C">G 序列和</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-7">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-7">代码</a></li>
</ul>
</li>
<li><a href="#h-%E5%B7%A7%E5%85%8B%E5%8A%9B">H 巧克力</a><br />
*
<ul>
<li><a href="#%E6%80%9D%E8%B7%AF-8">思路</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81-8">代码</a></li>
</ul>
</li>
<li><a href="#ed">ED</a></li>
</ul>
</p>
<h2 id="op"><a class="markdownIt-Anchor" href="#op"></a> OP</h2>
<p>一个半小时七道题，两个小时一道题555；<br />
G题鲨我；</p>
<h2 id="a-哪些数不在"><a class="markdownIt-Anchor" href="#a-哪些数不在"></a> A 哪些数不在</h2>
<p>差分</p>
<h4 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h4>
<p>即在区间左端点标记+1，右端点标记-1；</p>
<p>遍历所有可行范围，遇到+1即计数值+1，-1亦然；</p>
<p>处理好开闭问题后，计数值为0的位置即没有被线段覆盖；</p>
<h4 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">102</span>],n,m,l,r,i;<br>    <span class="hljs-keyword">while</span>(~<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;m))<br>    &#123;<br>        <span class="hljs-built_in">memset</span>(a,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span> a);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>        <span class="hljs-keyword">while</span>(m--)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;l,&amp;r);<br>            a[l<span class="hljs-number">-1</span>]++,a[r]--;<br>        &#125;<br>        queue&lt;<span class="hljs-type">int</span>&gt;que;<br>        <span class="hljs-type">int</span> c=a[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!c)que.<span class="hljs-built_in">push</span>(i);<br>            c+=a[i];<br>            <span class="hljs-comment">//printf(&quot;*&quot;);</span><br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,que.<span class="hljs-built_in">size</span>());<br>        <span class="hljs-keyword">while</span>(que.<span class="hljs-built_in">size</span>())<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d%c&quot;</span>,que.<span class="hljs-built_in">front</span>(),que.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>?<span class="hljs-string">&#x27; &#x27;</span>:<span class="hljs-string">&#x27;\n&#x27;</span>);<br>            que.<span class="hljs-built_in">pop</span>();<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="b-闹钟"><a class="markdownIt-Anchor" href="#b-闹钟"></a> B 闹钟</h2>
<p>gcd</p>
<h4 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h4>
<p>要求从第一个工作开始时间开始，所有工作开始时间均响铃，即求所有工作开始时间与第一次工作开始时间的差的最大公倍数；</p>
<p>再遍历所有可行响铃间隔，找出第一个满足条件的即可；</p>
<h4 id="代码-2"><a class="markdownIt-Anchor" href="#代码-2"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n,m,i;<br>    ll del=<span class="hljs-number">0</span>,g,mk;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    cin&gt;&gt;mk;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n<span class="hljs-number">-1</span>;i++)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld&quot;</span>,&amp;g);<br>        g-=mk;<br>        <span class="hljs-keyword">if</span>(!del)del=g;<br>        <span class="hljs-keyword">else</span> del=__gcd(del,g);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld&quot;</span>,&amp;g);<br>        <span class="hljs-keyword">if</span>(del%g==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(i&lt;=m)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;YES\n%d\n&quot;</span>,i);<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="c-减法"><a class="markdownIt-Anchor" href="#c-减法"></a> C 减法</h2>
<h4 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h4>
<p>对于这个数据量，模拟的话大概会爆TLE，于是我打算记录累计减去的值；</p>
<p>在代码中，这个值即为del；<br />
原题中所求的最小非零值即为最小的大于del的值；</p>
<p>再累加减去的值即可（注意每次减去的值不是找到的数本身，而是找到的数减去该次del值）；</p>
<h4 id="代码-3"><a class="markdownIt-Anchor" href="#代码-3"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ll del=<span class="hljs-number">0</span>,a[<span class="hljs-number">100005</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> n,k,i;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+<span class="hljs-number">1</span>+n);<br>    <span class="hljs-comment">//printf(&quot;%d\n&quot;,&amp;a[3]);</span><br>    <span class="hljs-keyword">while</span>(k--)<br>    &#123;<br>        ll *p=<span class="hljs-built_in">upper_bound</span>(a+<span class="hljs-number">1</span>,a+n+<span class="hljs-number">1</span>,del);<br>       <span class="hljs-comment">// printf(&quot;%d %d %lld\n&quot;,p,a+n+1,del);</span><br>        <span class="hljs-keyword">if</span>(p==a+n+<span class="hljs-number">1</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0\n&quot;</span>);<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,*p-del),del+=*p-del;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="d-隧道"><a class="markdownIt-Anchor" href="#d-隧道"></a> D 隧道</h2>
<p>bfs</p>
<h4 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h4>
<p>大致估计了一下，对于目标块每一个点进行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>遍历时间复杂度也遭得住，也没想到比较好的办法进一步降低时间复杂度，于是做得比较暴力；</p>
<p>对于起始点进行正常的bfs形成起始块，如果目标点已达，则输出0；<br />
否则对目标点bfs，再对连通块中的每一个点算出距离起始块对应最近点的距离；</p>
<p>os:竟然在字符串处理上栽了一发；</p>
<h4 id="代码-4"><a class="markdownIt-Anchor" href="#代码-4"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-type">int</span> c=<span class="hljs-number">1</span>,n;<span class="hljs-comment">//这道题代码贼乱，有两个bfs函数和一个求距离函数</span><br><span class="hljs-type">int</span> mp[<span class="hljs-number">51</span>][<span class="hljs-number">51</span>]=&#123;<span class="hljs-number">0</span>&#125;,gt[<span class="hljs-number">51</span>][<span class="hljs-number">51</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bfs</span><span class="hljs-params">(<span class="hljs-type">int</span> xi,<span class="hljs-type">int</span> xj)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> di[]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>&#125;,dj[]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br>    gt[xi][xj]=c;<br>    <span class="hljs-type">int</span> ct=<span class="hljs-number">1</span>;<br>    queue&lt;pair&lt;<span class="hljs-type">int</span> ,<span class="hljs-type">int</span>&gt; &gt;que;<br>    que.<span class="hljs-built_in">push</span>(&#123;xi,xj&#125;);<br>    <span class="hljs-keyword">while</span>(!que.<span class="hljs-built_in">empty</span>())<br>    &#123;<br>        pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;now=que.<span class="hljs-built_in">front</span>();<br>        que.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">4</span>;k++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(now.first+di[k]&gt;=<span class="hljs-number">1</span>&amp;&amp;now.first+di[k]&lt;=n<br>                &amp;&amp;now.second+dj[k]&gt;=<span class="hljs-number">1</span>&amp;&amp;now.second+dj[k]&lt;=n<br>                &amp;&amp;mp[now.first+di[k]][now.second+dj[k]]<br>                &amp;&amp;!gt[now.first+di[k]][now.second+dj[k]])<br>            que.<span class="hljs-built_in">push</span>(&#123;now.first+di[k],now.second+dj[k]&#125;)<br>            ,gt[now.first+di[k]][now.second+dj[k]]=c,ct++;<br>        &#125;<br>    &#125;<br>    c++;<br>    <span class="hljs-comment">//printf(&quot;%d\n&quot;,ct);</span><br>&#125;<br><span class="hljs-function">ll <span class="hljs-title">gdis</span><span class="hljs-params">(<span class="hljs-type">int</span> xi,<span class="hljs-type">int</span> xj)</span></span><br><span class="hljs-function"></span>&#123;<br>    ll md=<span class="hljs-number">100005</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(gt[i][j]==<span class="hljs-number">1</span>)<br>        &#123;<br>            md=<span class="hljs-built_in">min</span>(md,(ll)(xi-i)*(xi-i)+(xj-j)*(xj-j));<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> md;<br>&#125;<br><span class="hljs-function">ll <span class="hljs-title">bfs1</span><span class="hljs-params">(<span class="hljs-type">int</span> xi,<span class="hljs-type">int</span> xj)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> di[]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>&#125;,dj[]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br>    gt[xi][xj]=c;<br>    <span class="hljs-type">int</span> ct=<span class="hljs-number">1</span>;<br>    queue&lt;pair&lt;<span class="hljs-type">int</span> ,<span class="hljs-type">int</span>&gt; &gt;que;<br>    que.<span class="hljs-built_in">push</span>(&#123;xi,xj&#125;);<br>    ll mdis=<span class="hljs-built_in">gdis</span>(xi,xj);<br>    <span class="hljs-keyword">while</span>(!que.<span class="hljs-built_in">empty</span>())<br>    &#123;<br>        pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;now=que.<span class="hljs-built_in">front</span>();<br>        que.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">4</span>;k++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(now.first+di[k]&gt;=<span class="hljs-number">1</span>&amp;&amp;now.first+di[k]&lt;=n<br>                &amp;&amp;now.second+dj[k]&gt;=<span class="hljs-number">1</span>&amp;&amp;now.second+dj[k]&lt;=n<br>                &amp;&amp;mp[now.first+di[k]][now.second+dj[k]]<br>                &amp;&amp;!gt[now.first+di[k]][now.second+dj[k]])<br>            que.<span class="hljs-built_in">push</span>(&#123;now.first+di[k],now.second+dj[k]&#125;)<br>            ,gt[now.first+di[k]][now.second+dj[k]]=c<br>            ,mdis=<span class="hljs-built_in">min</span>(mdis,<span class="hljs-built_in">gdis</span>(now.first+di[k],now.second+dj[k])),ct++;<br>        &#125;<br>    &#125;<br>    c++;<br>    <span class="hljs-comment">//printf(&quot;%d\n&quot;,ct);</span><br>    <span class="hljs-keyword">return</span> mdis;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> fi,fj,ti,tj,i,j;<br>    <span class="hljs-comment">//char g;</span><br>    cin&gt;&gt;n;<br>    cin&gt;&gt;fi&gt;&gt;fj&gt;&gt;ti&gt;&gt;tj;<br>    string g;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        cin&gt;&gt;g;<br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;n;j++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!(g[j]-<span class="hljs-string">&#x27;0&#x27;</span>))mp[i][j+<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">bfs</span>(fi,fj);<br>    <span class="hljs-keyword">if</span>(gt[ti][tj])<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        ll ans=<span class="hljs-built_in">bfs1</span>(ti,tj);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld&quot;</span>,ans);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="e-尖括号"><a class="markdownIt-Anchor" href="#e-尖括号"></a> E 尖括号</h2>
<h4 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h4>
<p>对于一个尖括号串，最左侧的<code>&gt;</code>右面的所有符号均可以被其消去，操作后此符号在最右端，最右侧的<code>&lt;</code>同理；</p>
<p>接下来为了仅剩一个符号，我们需要统计要使 以上符号出现在在对应的端点 所需要删除的符号数并取最小值；<br />
（即对于<code>&lt;&lt;&lt;&lt;&gt;&gt;&gt;&lt;&gt;&lt;&lt;&gt;</code>，若使最左侧的<code>&gt;</code>出现在左端，则需要删去左侧的四个<code>&lt;</code>，若使最右侧的<code>&lt;</code>出现在最右端，需要删去右侧的一个<code>&gt;</code>，故最小删去数为1）</p>
<h4 id="代码-5"><a class="markdownIt-Anchor" href="#代码-5"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> t,n,i;<br>    string g;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)<br>    &#123;<br>        <span class="hljs-type">int</span> n;<br>        cin&gt;&gt;n&gt;&gt;g;<br>        <span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0\n&quot;</span>);<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-type">int</span> dl=<span class="hljs-number">0</span>,dr=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;g[i];i++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(g[i]==<span class="hljs-string">&#x27;&lt;&#x27;</span>)dl++;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(i=n<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(g[i]==<span class="hljs-string">&#x27;&gt;&#x27;</span>)dr++;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,<span class="hljs-built_in">min</span>(dl,dr));<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="f-恐龙的故事"><a class="markdownIt-Anchor" href="#f-恐龙的故事"></a> F 恐龙的故事</h2>
<p>素数筛，模拟</p>
<h4 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h4>
<p>模拟即可</p>
<h4 id="代码-6"><a class="markdownIt-Anchor" href="#代码-6"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-type">int</span> p[<span class="hljs-number">10000007</span>] , num[<span class="hljs-number">10000007</span>] , pp[<span class="hljs-number">10000007</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> c=<span class="hljs-number">0</span>,cc=<span class="hljs-number">0</span>;<br>    num[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>,num[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=<span class="hljs-number">10000000</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(!num[i])p[c++]=i;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;c&amp;&amp;i*p[j]&lt;<span class="hljs-number">10000000</span>;j++)<br>        &#123;<br>            num[i*p[j]]=<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">if</span>(i%p[j]==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;c;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(!num[i+<span class="hljs-number">1</span>])pp[cc++]=p[i];<br>    &#125;<br>    <span class="hljs-comment">//for(int i=0;i&lt;cc;i++)printf(&quot;%d\n&quot;,pp[i]);</span><br>    <span class="hljs-type">int</span> t,m;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)<br>    &#123;<br>        cin&gt;&gt;m;<br>        <span class="hljs-type">int</span> *p=<span class="hljs-built_in">lower_bound</span>(pp,pp+cc,m);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,*p);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="g-序列和"><a class="markdownIt-Anchor" href="#g-序列和"></a> G 序列和</h2>
<h4 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h4>
<p>这个题的描述有一些些些些问题，实际上需要输出的的是以x+y为第一排序依据升序排序，以x为第二排序依据降序排序之后的第一个；</p>
<p>为方便描述我们将删除序列中一个元素后的序列和称为缺刻和；<br />
对于所有的缺刻和，我们只需要记录能满足该缺刻和的所有序列中，序列号最小的两个序列号；</p>
<p>在对所有缺刻和寻找符合要求的x+y即可；</p>
<p>注：这道题个人既被卡过空间，又被卡过时间，经测试，unordered_map所用空间比map少1/10左右；<br />
用时：1077ms/2000ms，空间占用：60236k/65535k</p>
<h4 id="代码-7"><a class="markdownIt-Anchor" href="#代码-7"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br>unordered_map&lt;<span class="hljs-type">int</span>,pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; &gt;mp;<br>unordered_map&lt;<span class="hljs-type">int</span>,pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; &gt;::iterator it1;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> g[<span class="hljs-number">200005</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-type">int</span> k,n;<br>    cin&gt;&gt;k;<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>        <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;g[j]);<br>            sum+=g[j];<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!mp[sum-g[j]].first)mp[sum-g[j]].first=i;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!mp[sum-g[j]].second&amp;&amp;mp[sum-g[j]].first!=i)mp[sum-g[j]].second=i;<span class="hljs-comment">//避免我重我自己</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-type">int</span> f=<span class="hljs-number">0</span>,mx=k+<span class="hljs-number">1</span>,my=k+<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(it1=mp.<span class="hljs-built_in">begin</span>();it1!=mp.<span class="hljs-built_in">end</span>();it1++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(it1-&gt;second.first&amp;&amp;it1-&gt;second.second)<span class="hljs-comment">//两个均有值才参与排序</span><br>        &#123;<br>            <span class="hljs-type">int</span> a=it1-&gt;second.first;<br>            <span class="hljs-type">int</span> b=it1-&gt;second.second;<br>            <span class="hljs-keyword">if</span>(a+b&lt;mx+my||(a+b==mx+my&amp;&amp;b&lt;my))<span class="hljs-comment">//注意第二排序依据</span><br>            &#123;<br>                mx=<span class="hljs-built_in">min</span>(a,b),my=<span class="hljs-built_in">max</span>(a,b);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(mx!=k+<span class="hljs-number">1</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;YES\n%d %d&quot;</span>,mx,my);<span class="hljs-comment">//mk被更新过</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO&quot;</span>);<br>    <span class="hljs-comment">//printf(&quot;\n%d&quot;,mp.size());</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="h-巧克力"><a class="markdownIt-Anchor" href="#h-巧克力"></a> H 巧克力</h2>
<p>模拟</p>
<h4 id="思路-8"><a class="markdownIt-Anchor" href="#思路-8"></a> 思路</h4>
<p>按要求模拟即可</p>
<h4 id="代码-8"><a class="markdownIt-Anchor" href="#代码-8"></a> 代码</h4>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)<br>    &#123;<br>        <span class="hljs-type">int</span> s,a,b,c;<br>        cin&gt;&gt;s&gt;&gt;a&gt;&gt;b&gt;&gt;c;<br>        ll ans=<span class="hljs-number">0</span>;<br>        ans=s/c;<br>        ans+=b*(ans/a);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,ans);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<h2 id="ed"><a class="markdownIt-Anchor" href="#ed"></a> ED</h2>
<p>\</p>

                
              </div>
            
            <hr/>
            <div>
              <div class="post-metas my-3">
  
    <div class="post-meta mr-3 d-flex align-items-center">
      <i class="iconfont icon-category"></i>
      

<span class="category-chains">
  
  
    
      <span class="category-chain">
        
  <a href="/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/" class="category-chain-item">算法竞赛</a>
  
  
    <span>></span>
    
  <a href="/categories/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B/%E6%AF%94%E8%B5%9B%E4%B8%8E%E9%A2%98%E9%9B%86/" class="category-chain-item">比赛与题集</a>
  
  

  

      </span>
    
  
</span>

    </div>
  
  
</div>


              
  

  <div class="license-box my-3">
    <div class="license-title">
      <div>NEFU大一省赛训练1（全题解）</div>
      <div>https://tanyuu.github.io/2021.01-06/NEFU大一省赛训练1（全题解）</div>
    </div>
    <div class="license-meta">
      
        <div class="license-meta-item">
          <div>作者</div>
          <div>F Juny</div>
        </div>
      
      
        <div class="license-meta-item license-meta-date">
          <div>发布于</div>
          <div>2021年5月3日</div>
        </div>
      
      
      <div class="license-meta-item">
        <div>许可协议</div>
        <div>
          
            
            
              <a target="_blank" href="https://creativecommons.org/licenses/by/4.0/">
              <span class="hint--top hint--rounded" aria-label="BY - 署名">
                <i class="iconfont icon-by"></i>
              </span>
              </a>
            
          
        </div>
      </div>
    </div>
    <div class="license-icon iconfont"></div>
  </div>



              
                <div class="post-prevnext my-3">
                  <article class="post-prev col-6">
                    
                    
                      <a href="/2021.01-06/NEFU%E5%A4%A7%E4%B8%80%E7%9C%81%E8%B5%9B%E8%AE%AD%E7%BB%832%20%EF%BC%88A%20B%20C%20D%20E%20F%20G%20I%20J%EF%BC%89" title="NEFU大一省赛训练2 （A B C D E F G I J）">
                        <i class="iconfont icon-arrowleft"></i>
                        <span class="hidden-mobile">NEFU大一省赛训练2 （A B C D E F G I J）</span>
                        <span class="visible-mobile">上一篇</span>
                      </a>
                    
                  </article>
                  <article class="post-next col-6">
                    
                    
                      <a href="/2021.01-06/PTA%E5%A4%A9%E6%A2%AF%E7%BB%83%E4%B9%A0%E8%B5%9B%20%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B02%EF%BC%88L2%20013-021%EF%BC%89" title="PTA天梯练习赛 刷题笔记2（L2 013-021）">
                        <span class="hidden-mobile">PTA天梯练习赛 刷题笔记2（L2 013-021）</span>
                        <span class="visible-mobile">下一篇</span>
                        <i class="iconfont icon-arrowright"></i>
                      </a>
                    
                  </article>
                </div>
              
            </div>

            
          </article>
        </div>
      </div>
    </div>

    <div class="side-col d-none d-lg-block col-lg-2">
      
  <aside class="sidebar" style="margin-left: -1rem">
    <div id="toc">
  <p class="toc-header"><i class="iconfont icon-list"></i>&nbsp;目录</p>
  <div class="toc-body" id="toc-body"></div>
</div>



  </aside>


    </div>
  </div>
</div>





  



  



  



  



  


  
  








    

    
      <a id="scroll-top-button" aria-label="TOP" href="#" role="button">
        <i class="iconfont icon-arrowup" aria-hidden="true"></i>
      </a>
    

    
      <div class="modal fade" id="modalSearch" tabindex="-1" role="dialog" aria-labelledby="ModalLabel"
     aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">搜索</h4>
        <button type="button" id="local-search-close" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body mx-3">
        <div class="md-form mb-5">
          <input type="text" id="local-search-input" class="form-control validate">
          <label data-error="x" data-success="v" for="local-search-input">关键词</label>
        </div>
        <div class="list-group" id="local-search-result"></div>
      </div>
    </div>
  </div>
</div>

    

    
  </main>

  <footer>
    <div class="footer-inner">
  
    <div class="footer-content">
       <a href="https://hexo.io" target="_blank" rel="nofollow noopener"><span>Hexo</span></a> <i class="iconfont icon-love"></i> <a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="nofollow noopener"><span>Fluid</span></a> 
    </div>
  
  
  
  
</div>

  </footer>

  <!-- Scripts -->
  
  <script  src="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.js" ></script>
  <link  rel="stylesheet" href="https://lib.baomitu.com/nprogress/0.2.0/nprogress.min.css" />

  <script>
    NProgress.configure({"showSpinner":false,"trickleSpeed":100})
    NProgress.start()
    window.addEventListener('load', function() {
      NProgress.done();
    })
  </script>


<script  src="https://lib.baomitu.com/jquery/3.6.0/jquery.min.js" ></script>
<script  src="https://lib.baomitu.com/twitter-bootstrap/4.6.1/js/bootstrap.min.js" ></script>
<script  src="/js/events.js" ></script>
<script  src="/js/plugins.js" ></script>


  <script  src="https://lib.baomitu.com/typed.js/2.0.12/typed.min.js" ></script>
  <script>
    (function (window, document) {
      var typing = Fluid.plugins.typing;
      var subtitle = document.getElementById('subtitle');
      if (!subtitle || !typing) {
        return;
      }
      var text = subtitle.getAttribute('data-typed-text');
      
        typing(text);
      
    })(window, document);
  </script>




  
    <script  src="/js/img-lazyload.js" ></script>
  




  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/tocbot/4.18.2/tocbot.min.js', function() {
    var toc = jQuery('#toc');
    if (toc.length === 0 || !window.tocbot) { return; }
    var boardCtn = jQuery('#board-ctn');
    var boardTop = boardCtn.offset().top;

    window.tocbot.init({
      tocSelector     : '#toc-body',
      contentSelector : '.markdown-body',
      headingSelector : CONFIG.toc.headingSelector || 'h1,h2,h3,h4,h5,h6',
      linkClass       : 'tocbot-link',
      activeLinkClass : 'tocbot-active-link',
      listClass       : 'tocbot-list',
      isCollapsedClass: 'tocbot-is-collapsed',
      collapsibleClass: 'tocbot-is-collapsible',
      collapseDepth   : CONFIG.toc.collapseDepth || 0,
      scrollSmooth    : true,
      headingsOffset  : -boardTop
    });
    if (toc.find('.toc-list-item').length > 0) {
      toc.css('visibility', 'visible');
    }
  });
</script>


  <script src=https://lib.baomitu.com/clipboard.js/2.0.10/clipboard.min.js></script>

  <script>Fluid.plugins.codeWidget();</script>


  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/anchor-js/4.3.1/anchor.min.js', function() {
    window.anchors.options = {
      placement: CONFIG.anchorjs.placement,
      visible  : CONFIG.anchorjs.visible
    };
    if (CONFIG.anchorjs.icon) {
      window.anchors.options.icon = CONFIG.anchorjs.icon;
    }
    var el = (CONFIG.anchorjs.element || 'h1,h2,h3,h4,h5,h6').split(',');
    var res = [];
    for (var item of el) {
      res.push('.markdown-body > ' + item.trim());
    }
    if (CONFIG.anchorjs.placement === 'left') {
      window.anchors.options.class = 'anchorjs-link-left';
    }
    window.anchors.add(res.join(', '));
  });
</script>


  
<script>
  Fluid.utils.createScript('https://lib.baomitu.com/fancybox/3.5.7/jquery.fancybox.min.js', function() {
    Fluid.plugins.fancyBox();
  });
</script>


  <script>Fluid.plugins.imageCaption();</script>

  <script  src="/js/local-search.js" ></script>





<!-- 主题的启动项，将它保持在最底部 -->
<!-- the boot of the theme, keep it at the bottom -->
<script  src="/js/boot.js" ></script>


  

  <noscript>
    <div class="noscript-warning">博客在允许 JavaScript 运行的环境下浏览效果更佳</div>
  </noscript>
</body>
</html>
